apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode = rootProject.ext.versionCode
        versionName = rootProject.ext.versionName

        version = rootProject.ext.version
        archivesBaseName = "emergencydatasdk-$versionName"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$support_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.google.dagger:dagger:2.11'
    kapt 'com.google.dagger:dagger-compiler:2.11'

    androidTestImplementation 'com.google.dagger:dagger:2.11'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.11'

    testImplementation 'com.google.dagger:dagger:2.11'
    kaptTest 'com.google.dagger:dagger-compiler:2.11'

    implementation 'com.squareup.okhttp3:okhttp:3.8.0'

    implementation 'com.github.rtoshiro.securesharedpreferences:securesharedpreferences:1.2.0'

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    testImplementation 'junit:junit:4.12'

    testImplementation 'org.mockito:mockito-inline:2.8.9'
    testImplementation "io.mockk:mockk:1.5.5"

    androidTestImplementation 'com.github.andrzejchm.RESTMock:android:0.2.2'
    testImplementation 'com.github.andrzejchm.RESTMock:android:0.2.2'

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

sourceSets {
    main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
}

task deployCoverageReport(type: Exec) {
    println("uploading coverage report to codecov")
    commandLine "../codecov.sh"
}

ext {
    PUBLISH_GROUP_ID = 'com.rapidsos'
    PUBLISH_ARTIFACT_ID = project.getName()
    PUBLISH_VERSION = version
}

dokka {
    outputFormat = "javadoc"
    outputDirectory = "$buildDir/kdocs"
    skipEmptyPackages = true
    sourceDirs = files('src/main/kotlin')

    externalDocumentationLink {
        url = new URL("http://reactivex.io/RxJava/2.x/javadoc/")
        packageListUrl = new URL("http://reactivex.io/RxJava/2.x/javadoc/package-list")
    }
}

apply from: 'jacoco_coverage.gradle'
apply from: 'generate-artifact.gradle'